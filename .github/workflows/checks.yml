on:
  workflow_dispatch:
  workflow_call:

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install pre-commit
        run: pip install pre-commit

        # Caches the venv at the end of the job and reloads for quicker pre-commit.
        # Uses pyproject.toml and pre-commit-config file to create hash.
      - name: Cache venv
        uses: actions/cache@v3
        id: cache
        with:
          path: |
            ~/work/data-modelling-storage-service/data-modelling-storage-service/.venv
            ~/.cache/pre-commit
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Set up venv
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          pip install poetry
          poetry config virtualenvs.in-project true
          poetry install
          pre-commit install --install-hooks

      - name: Run pre-commit
        run: pre-commit run --all-files --verbose

  generate-api:
    name: Run checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: "Build dev image"
        run: docker build -t devimage --target development .
      - name: "Generate API"
        run: docker run -d -p "5000:5000" -e RESET_DATA_SOURCE=off devimage && ./generate-python-package.sh
