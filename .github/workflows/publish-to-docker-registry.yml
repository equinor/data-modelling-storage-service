name: Publish DMSS API to docker registry

on:
  push:
    branches:
      - "master"
    tags:
      - "v**"


env:
  DOCKER_IMAGE: mariner.azurecr.io/dmss

jobs:
  build-n-publish:
    name: Build and deploy
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@master
      - name: "Build Docker image"
        run: docker build --tag ${DOCKER_IMAGE}:latest .
      - name: "Docker Login"
        if: "'refs/heads/master' == github.ref || startsWith(github.ref, 'refs/tags/')"
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login mariner.azurecr.io --password-stdin --username ${{ secrets.DOCKER_USERNAME }}
      - name: "Push Docker image (latest)"
        if: "'refs/heads/master' == github.ref || startsWith(github.ref, 'refs/tags/')"
        run: docker push ${DOCKER_IMAGE}:latest
      - name: "Determine tag"
        if: "startsWith(github.ref, 'refs/tags/')"
        id: "determine-tag"
        run: "echo \"::set-output name=tag::${GITHUB_REF#refs/tags/}\""
      - name: "Tag Docker image (versioned)"
        if: "startsWith(github.ref, 'refs/tags/')"
        run: docker tag ${{ env.DOCKER_IMAGE }} ${{ env.DOCKER_IMAGE }}:${{ steps.determine-tag.outputs.tag }}
      - name: "Push Docker image (versioned)"
        if: "startsWith(github.ref, 'refs/tags/')"
        run: docker push ${{ env.DOCKER_IMAGE }}:${{ steps.determine-tag.outputs.tag }}
      - name: "Docker Logout"
        if: "'refs/heads/master' == github.ref || startsWith(github.ref, 'refs/tags/')"
        run: docker logout

  store-images-as-artifacts:
    depends-on: [build-n-publish]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: pull latest DMSS image
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login mariner.azurecr.io --password-stdin --username ${{ secrets.DOCKER_USERNAME }}
          docker pull $DOCKER_IMAGE:latest
      
      - name: save docker images
        run: |
          docker save $DOCKER_IMAGE:latest > DMSS_IMAGES.tar
          ls -sh DMSS_IMAGES.tar
      - name: upload images as artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dmss-artifact
          path: DMSS_IMAGES.tar