openapi: 3.0.1
info:
  description: Data storage service for DMT
  title: Data Modelling Storage Service API
  version: 0.1.0
servers:
- url: http://0.0.0.0:8000/api/v1
security:
- jwt: []
tags:
- description: Packages
  name: package
- description: Documents
  name: document
- description: Virtual file system
  name: explorer
- description: Data sources
  name: datasource
paths:
  /data-sources:
    get:
      operationId: get_all
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: List of data sources
      summary: Get all data sources
      tags:
      - datasource
      x-openapi-router-controller: controllers.datasource_controller
  /data-sources/{dataSourceId}:
    get:
      operationId: get_data_source
      parameters:
      - description: The data source ID
        explode: false
        in: path
        name: dataSourceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: Data source
      summary: Get data source
      tags:
      - datasource
      x-openapi-router-controller: controllers.datasource_controller
    post:
      operationId: save
      parameters:
      - description: The data source ID
        explode: false
        in: path
        name: dataSourceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/DocumentBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: Updated document
      summary: Add data source
      tags:
      - datasource
      x-openapi-router-controller: controllers.datasource_controller
  /documents-by-path/{dataSourceId}:
    get:
      operationId: get_by_path
      parameters:
      - description: The data source ID
        explode: false
        in: path
        name: dataSourceId
        required: true
        schema:
          type: string
        style: simple
      - description: The document path
        explode: true
        in: query
        name: path
        required: true
        schema:
          type: string
        style: form
      - description: Limit nested depth of result. Default=999
        explode: true
        in: query
        name: depth
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponse'
          description: A document
      summary: Get document by path
      tags:
      - document
      x-openapi-router-controller: controllers.document_controller
  /documents/{dataSourceId}/{documentId}:
    get:
      operationId: get_by_id
      parameters:
      - description: The data source ID
        explode: false
        in: path
        name: dataSourceId
        required: true
        schema:
          type: string
        style: simple
      - description: The document ID
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      - description: Limit nested depth of result. Default=999
        explode: true
        in: query
        name: depth
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponse'
          description: A document
      summary: Get document by ID
      tags:
      - document
      x-openapi-router-controller: controllers.document_controller
    put:
      operationId: update
      parameters:
      - description: The data source ID
        explode: false
        in: path
        name: dataSourceId
        required: true
        schema:
          type: string
        style: simple
      - description: The document ID
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      - description: Path to contained document
        explode: true
        in: query
        name: attribute
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/DocumentBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponse'
          description: The updated document
      summary: Update document
      tags:
      - document
      x-openapi-router-controller: controllers.document_controller
  /explorer/{dataSourceId}/add-document:
    post:
      operationId: add_document
      parameters:
      - description: The data source ID
        explode: false
        in: path
        name: dataSourceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/DocumentBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Added document UID
      summary: Add document
      tags:
      - explorer
      x-openapi-router-controller: controllers.explorer_controller
  /explorer/{dataSourceId}/add-package:
    post:
      operationId: add_package
      parameters:
      - description: The data source ID
        explode: false
        in: path
        name: dataSourceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/DocumentBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponse'
          description: Added package
      summary: Add package
      tags:
      - explorer
      x-openapi-router-controller: controllers.explorer_controller
  /explorer/{dataSourceId}/add-raw:
    post:
      operationId: add_raw
      parameters:
      - description: The data source ID
        explode: false
        in: path
        name: dataSourceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/DocumentBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Added document UID
      summary: Add raw document
      tags:
      - explorer
      x-openapi-router-controller: controllers.explorer_controller
  /explorer/{dataSourceId}/add-to-parent:
    post:
      operationId: add_to_parent
      parameters:
      - description: The data source ID
        explode: false
        in: path
        name: dataSourceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                parentId:
                  type: string
                type:
                  type: string
                attribute:
                  type: string
              required:
              - attribute
              - name
              - parentId
              - type
              type: object
        description: A JSON object containing document information
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
          description: The UID of the added document
      summary: Add document to parent
      tags:
      - explorer
      x-openapi-router-controller: controllers.explorer_controller
  /explorer/{dataSourceId}/add-to-path:
    post:
      operationId: add_to_path
      parameters:
      - description: The data source ID
        explode: false
        in: path
        name: dataSourceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/DocumentBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponse'
          description: Added document
      summary: Add document to path
      tags:
      - explorer
      x-openapi-router-controller: controllers.explorer_controller
  /explorer/{dataSourceId}/move:
    put:
      operationId: move
      parameters:
      - description: The data source ID
        explode: false
        in: path
        name: dataSourceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/DocumentBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponse'
          description: Added document
      summary: Move document
      tags:
      - explorer
      x-openapi-router-controller: controllers.explorer_controller
  /explorer/{dataSourceId}/remove:
    post:
      operationId: remove
      parameters:
      - description: The data source ID
        explode: false
        in: path
        name: dataSourceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_1'
        content:
          application/json:
            schema:
              properties:
                parentId:
                  nullable: true
                  type: string
                documentId:
                  type: string
              required:
              - documentId
              type: object
        description: A JSON object containing document information
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Remove status
      summary: Remove document
      tags:
      - explorer
      x-openapi-router-controller: controllers.explorer_controller
  /explorer/{dataSourceId}/remove-by-path:
    post:
      operationId: remove_by_path
      parameters:
      - description: The data source ID
        explode: false
        in: path
        name: dataSourceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_2'
        content:
          application/json:
            schema:
              properties:
                directory:
                  type: string
              required:
              - directory
              type: object
        description: A JSON object containing document information
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Remove status
      summary: Remove document by path
      tags:
      - explorer
      x-openapi-router-controller: controllers.explorer_controller
  /explorer/{dataSourceId}/rename:
    put:
      operationId: rename
      parameters:
      - description: The data source ID
        explode: false
        in: path
        name: dataSourceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_3'
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                parentId:
                  nullable: true
                  type: string
                description:
                  nullable: true
                  type: string
                documentId:
                  type: string
              required:
              - documentId
              - name
              type: object
        description: A JSON object containing rename information
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponse'
          description: Added document
      summary: Rename document
      tags:
      - explorer
      x-openapi-router-controller: controllers.explorer_controller
  /packages/{dataSourceId}:
    get:
      operationId: get
      parameters:
      - description: The data source ID
        explode: false
        in: path
        name: dataSourceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: A document
      summary: Get packages
      tags:
      - package
      x-openapi-router-controller: controllers.package_controller
  /packages/{dataSourceId}/findByName/{name}:
    get:
      operationId: find_by_name
      parameters:
      - description: The data source ID
        explode: false
        in: path
        name: dataSourceId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the package to find
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Package
      summary: Query packages
      tags:
      - package
      x-openapi-router-controller: controllers.package_controller
  /search/{dataSourceId}:
    post:
      operationId: search_entities
      parameters:
      - description: The data source ID
        explode: false
        in: path
        name: dataSourceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_4'
        content:
          application/json:
            schema:
              properties:
                type:
                  minLength: 5
                  type: string
              required:
              - type
              type: object
        description: A JSON object containing search parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
          description: Search results
      summary: Search for entities
      tags:
      - search
      x-openapi-router-controller: controllers.search_controller
components:
  requestBodies:
    DocumentBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DocumentBody'
      description: Object containing all info for a document
      required: true
    inline_object:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object'
      required: true
    inline_object_1:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_1'
      required: true
    inline_object_2:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_2'
      required: true
    inline_object_3:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_3'
      required: true
    inline_object_4:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_4'
      required: true
  schemas:
    DocumentResponse:
      additionalProperties:
        type: object
      type: object
    DocumentBody:
      additionalProperties: true
      type: object
    SearchResponse:
      additionalProperties: true
      type: object
    inline_response_200:
      example:
        data:
          key: '{}'
      properties:
        data:
          additionalProperties: true
          type: object
    inline_object:
      properties:
        name:
          type: string
        parentId:
          type: string
        type:
          type: string
        attribute:
          type: string
      required:
      - attribute
      - name
      - parentId
      - type
      type: object
    inline_response_200_1:
      example:
        uid: uid
      properties:
        uid:
          type: string
    inline_object_1:
      properties:
        parentId:
          nullable: true
          type: string
        documentId:
          type: string
      required:
      - documentId
      type: object
    inline_object_2:
      properties:
        directory:
          type: string
      required:
      - directory
      type: object
    inline_object_3:
      properties:
        name:
          type: string
        parentId:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        documentId:
          type: string
      required:
      - documentId
      - name
      type: object
    inline_object_4:
      properties:
        type:
          minLength: 5
          type: string
      required:
      - type
      type: object
  securitySchemes:
    jwt:
      bearerFormat: JWT
      scheme: bearer
      type: http
      x-bearerInfoFunc: api.utils.authentication.decode_jwt
